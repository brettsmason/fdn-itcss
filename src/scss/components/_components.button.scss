// Foundation for Sites by ZURB
// foundation.zurb.com
// Licensed under MIT Open Source

////
/// @group button
////

/// Sets the base styles of a button.
@mixin zf-button-base(
  $margin: $button-margin,
  $font-family: $button-font-family,
  $padding: $button-padding,
  $border-radius: $button-radius,
) {
  @include disable-mouse-outline;

  display: inline-block;
  vertical-align: middle;
  font: inherit;
  text-align: center;
  margin: $margin;
  cursor: pointer;
  padding: $padding;
  transition: $transition;
  border-radius: $border-radius;
}

/// Sets the visual style of a button.
/// @param {Color} $background [$button-background] - Background color of the button.
/// @param {Color} $background-hover [$button-background-hover] - Background color of the button on hover. Set to `auto` to have the mixin automatically generate a hover color.
/// @param {Color} $color [$button-color] - Text color of the button. Set to `auto` to automatically generate a color based on the background color.
/// @param {Color} $color-hover [$button-color-hover] - Text color of the button on hover. Set to `auto` to automatically generate a color based on the background hover color.
@mixin zf-button-style(
  $background: $button-background,
  $background-hover: $button-background-hover,
  $color: $button-color,
  $color-hover: $button-color-hover
) {
  $color: if($color == auto, color-pick-contrast($background, ($button-color, $button-color-alt)), $color);
  $background-hover: if($background-hover == auto, scale-color($background, $lightness: $global-scale-color), $background-hover);
  $color-hover: if($color-hover == auto, color-pick-contrast($background-hover, ($button-background, $button-color-alt)), $color-hover);

  background-color: $background;
  color: $color;

  &:hover,
  &:focus {
    background-color: $background-hover;
    color: $color-hover;
  }
}

@mixin zf-buttons {
  // Base button
  .c-button {
    @include button-base;

    // Generate each of our button modifier classes
    @each $name, $color in $button-palette {
      &.--#{$name} {
        @include zf-button-style($color);
      }
    }
  }
}